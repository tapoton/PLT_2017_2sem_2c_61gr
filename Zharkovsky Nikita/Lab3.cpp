/*
Ð–Ð°Ñ€ÐºÐ¾Ð²ÑÐºÐ¸Ð¹ ÐÐ¸ÐºÐ¸Ñ‚Ð° 2Ðº 61Ð³Ñ€ 
Ð›Ð°Ð±Ð°Ñ€Ð°Ñ‚Ð¾Ñ€Ð½Ð°Ñ 3
11. ÐŸÐ¾ ÑÐ¸ÑÑ‚ÐµÐ¼Ðµ Ð´Ð²ÑƒÑÑ‚Ð¾Ñ€Ð¾Ð½Ð½Ð¸Ñ… Ð´Ð¾Ñ€Ð¾Ð³ Ð¾Ð¿Ñ€ÐµÐ´ÐµÐ»Ð¸Ñ‚ÑŒ ÐµÑÑ‚ÑŒ Ð»Ð¸ Ð² Ð½ÐµÐ¹ Ð³Ð¾Ñ€Ð¾Ð´, 
Ð¸Ð· ÐºÐ¾Ñ‚Ð¾Ñ€Ð¾Ð³Ð¾ Ð¼Ð¾Ð¶Ð½Ð¾ Ð´Ð¾Ð±Ñ€Ð°Ñ‚ÑŒÑÑ Ð² Ð»ÑŽÐ±Ð¾Ð³Ð¾ Ð´Ñ€ÑƒÐ³Ð¾Ð³Ð¾ Ð½Ðµ Ð±Ð¾Ð»ÐµÐµ Ñ‡ÐµÐ¼ Ð·Ð° 100 ÐºÐ¼. Ð Ð°Ð·Ñ€ÐµÑˆÐ°ÐµÑ‚ÑÑ Ð¿Ð¾ÑÑ‚Ñ€Ð¾Ð¸Ñ‚ÑŒ Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ 3 Ð´Ð¾Ñ€Ð¾Ð³Ð¸.
*/

#include <iostream>
#include <set>
#include<algorithm>
using namespace std;

int n, MAX=100;
set<int> answer; //Ð¾Ñ‚Ð²ÐµÑ‚(Ð²ÐµÑ€ÑˆÐ¸Ð½Ñ‹, Ð¸Ð· ÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ñ… Ð¼Ð¾Ð¶Ð½Ð¾ Ð´Ð¾Ð±Ñ€Ð°Ñ‚ÑŒÑÑ Ð´Ð¾ Ð¾ÑÑ‚Ð°Ð»ÑŒÐ½Ñ‹Ñ…)
int **g; //Ð³Ñ€Ð°Ñ„
bool *used;
int root; //ÐºÐ¾Ñ€Ð½ÐµÐ²Ð¾Ð¹ ÑÐ»-Ñ‚ Ð´Ð»Ñ ÐºÐ¾Ñ‚Ð¾Ñ€Ð¾Ð³Ð¾ Ð²Ñ‹Ð·Ñ‹Ð²Ð°ÐµÑ‚ÑÑ Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ Ñ„-Ð¸Ñ Ð¸ Ð² Ð¿Ð¾ÑÐ»ÐµÐ´ÑÑ‚Ð²Ð¸Ð¸ Ð´Ð°Ð½Ð½Ð°Ñ Ð¿ÐµÑ€ÐµÐ¼ÐµÐ½Ð½Ð°Ñ Ð¸ÑÐ¿Ð¾Ð»ÑŒÐ·ÑƒÐµÑ‚ÑÑ Ð´Ð»Ñ Ð·Ð°Ð¿Ð¸ÑÐ¸ Ð¾Ñ‚Ð²ÐµÑ‚Ð°
bool flag=false;
//Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð°Ñ Ñ„ÑƒÐ½ÐºÑ†Ð¸Ñ
int *a,*b;
void back(int v, int sum = 0) 
{
	if(sum > MAX) return; //ÑƒÑÐ»Ð¾Ð²Ð¸Ðµ Ð²Ñ‹Ñ…Ð¾Ð´Ð°
	used[v] = true;
	
	
	for(int i = 0; i < n; i++)
	{
		if(!used[b[i]]) 
		{
			if(g[v][b[i]] > 0 && sum + g[v][b[i]] <= MAX)
			    back(b[i], sum + g[v][b[i]]);
		}
	}
	//Ð¿Ñ€Ð¾Ð²ÐµÑ€ÐºÐ° Ð½Ð° ÐºÐ¾Ð½ÐµÑ‡Ð½Ð¾ÑÑ‚ÑŒ Ñ€Ð°Ð±Ð¾Ñ‚Ñ‹ Ð°Ð»Ð³Ð¾Ñ€Ð¸Ñ‚Ð¼Ð°
	bool ans = 1;
	for(int i = 0; i < n && ans; i++)
		if(!used[i]) ans = 0;
             
	//ÐµÑÐ»Ð¸ Ð¿Ñ€Ð¾Ð¹Ð´ÐµÐ½Ñ‹ Ð²ÑÐµ Ð²ÐµÑ€ÑˆÐ¸Ð½Ñ‹, Ð·Ð°Ð½Ð¾ÑÐ¸Ð¼ Ð² Ð¾Ñ‚Ð²ÐµÑ‚ root
	if(ans) answer.insert(root);
}

//Ð´Ð»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð¹ Ð²ÐµÑ€ÑˆÐ¸Ð½Ñ‹ Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð¾ Ð¿Ñ€Ð¾Ð²ÐµÑ€ÑÐµÐ¼ Ð´Ð¾ÑÑ‚Ð¸Ð¶Ð¸Ð¼Ð¾ÑÑ‚ÑŒ Ð²ÑÐµÑ… Ð´Ð¾Ñ€Ð¾Ð³ Ð½Ð° Ñ€Ð°ÑÑÑ‚Ð¾ÑÐ½Ð¸Ð¸ 100ÐºÐ¼
void solution()
{
	for(int l = 0; l < n; l++)
	{
		root = l;
		
    
		back(l); //Ð²Ñ‹Ð·Ð¾Ð² Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð¾Ð¹ Ñ„ÑƒÐ½ÐºÑ†Ð¸Ð¸
    
		for (int j = 0; j < n; j++) //Ð¾Ð±Ð½ÑƒÐ»ÐµÐ½Ð¸Ðµ Ð¼Ð°ÑÑÐ¸Ð²Ð° used
			used[j] = false;
	}
}

//Ñ„-Ð¸Ñ Ð²ÑÑ‚Ð°Ð²ÐºÐ¸ Ð·Ð°Ð¿Ð¸ÑÐ¸ Ð² Ð³Ñ€Ð°Ñ„
void insert(int s,int to, int x)
{
	g[s-1][to-1] = g[to-1][s-1] = x;
}
int main()
{
	//ÑÑ‡Ð¸Ñ‚Ñ‹Ð²Ð°Ð½Ð¸Ðµ Ð´Ð°Ð½Ð½Ñ‹Ñ…, Ð²Ñ‹Ð´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð¿Ð°Ð¼ÑÑ‚Ð¸
	int m;
	cout << "Enter the number of vertices and edges (n,m):";
	cin >> n >> m;
	g = new int *[n];
	used = new bool[n];
	a=new int[n];
	b=new int[n];
	for(int i = 0; i < n; i++)
	{
		g[i] = new int[n];
		for(int j = 0; j < n; j++) g[i][j] = 0;
		used[i] = 0;
		a[i]=0;
		b[i]=i;
	}
	cout << "Enter edges (from,to,distance):" << endl;
    for(int i = 0, a, b, c; i < m; i++)
    {
    	cin >> a >> b >> c;
    	insert(a, b, c);
	}
	
	// Ð¿ÐµÑ€ÐµÐ±Ð¾Ñ€ Ð²ÑÐµÐ²Ð¾Ð·Ð¼Ð¾Ð¶Ð½Ñ‹Ñ… Ñ€Ð°ÑÑÑ‚Ð¾Ð½Ð¾Ð²Ð¾Ðº Ñ‚Ñ€ÐµÑ… Ð´Ð¾Ð¿Ð¾Ð»Ð½Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ñ‹Ñ… Ð´Ð¾Ñ€Ð¾Ð³ Ð² ÑÐ¸ÑÑ‚ÐµÐ¼Ðµ Ð´Ð¾Ñ€Ð¾Ð³
	// Ð¸ Ð²Ñ‹Ð·Ð¾Ð² Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ð²Ð½Ð¾Ð¹ Ñ„ÑƒÐ½ÐºÑ†Ð¸Ð¸ Ð´Ð»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð¹ Ñ€Ð°ÑÑÑ‚Ð¾Ð½Ð¾Ð²ÐºÐ¸
	// (Ð´Ð°Ð½Ð½Ñ‹Ð¹ ÑÐ¿Ð¾ÑÐ¾Ð± ÑÑ„Ñ„ÐµÐºÑ‚Ð¸Ð²ÐµÐ½ Ñ‚ÐµÐ¼, Ñ‡Ñ‚Ð¾ Ð½Ðµ Ð·Ð°Ð±Ð¸Ð²Ð°ÐµÑ‚ÑÑ Ñ€ÐµÐºÑƒÑ€ÑÐ¸Ñ Ð¿Ñ€Ð¸ Ñ€Ð°Ð·Ð»Ð¸Ñ‡Ð½Ñ‹Ñ… ÐºÐ¾Ð¼Ð±Ð¸Ð½Ð°Ñ†Ð¸ÑÑ… Ð´Ð¾Ð¿.Ð´Ð¾Ñ€Ð¾Ð³)
	
	// p.s. Ð² Ñ€ÐµÑˆÐµÐ½Ð¸Ð¸ Ð¿Ð¾Ð´Ñ€Ð°Ð·ÑƒÐ¼ÐµÐ²Ð°ÐµÑ‚ÑÑ Ñ‡Ñ‚Ð¾ Ð´Ð¾Ð¿.Ð´Ð¾Ñ€Ð¾Ð³Ð¸ Ð¼Ð¾Ð¶Ð½Ð¾ ÑÑ‚Ñ€Ð¾Ð¸Ñ‚ÑŒ Ð¼ÐµÐ¶Ð´Ñƒ Ð³Ð¾Ñ€Ð¾Ð´Ð°Ð¼Ð¸, 
	// ÐºÐ¾Ñ‚Ð¾Ñ€Ñ‹Ðµ Ð»Ð¸Ð±Ð¾ ÑÐ¾ÐµÐ´Ð¸Ð½ÐµÐ½Ñ‹, Ð»Ð¸Ð±Ð¾ Ð½ÐµÑ‚, Ð¿Ñ€Ð¸Ñ‡ÐµÐ¼ ÑÑ‚Ð¸ Ð´Ð¾Ñ€Ð¾Ð³Ð¸ Ð¼Ð¾Ð³ÑƒÑ‚ Ð±Ñ‹Ñ‚ÑŒ min Ð´Ð»Ð¸Ð½Ñ‹, Ñ‚.Ðµ 1 
	for(int i1 = 0; i1 < n; i1++)
	{
		for(int j1 = 0; j1 < n; j1++)
		{
			for(int i2 = 0; i2 < n; i2++) 
			{
				for (int j2 = 0; j2 < n; j2++)
				{
					for (int i3 = 0; i3 < n; i3++)
					{
						for (int j3 = 0; j3 < n; j3++)
						{
							int temp1 = g[i1][j1], temp2 = g[i2][j2], temp3 = g[i3][j3];
							g[i1][j1] = g[j1][i1] = 1;
							g[i2][j2] = g[j2][i2] = 1;
							g[i3][j3] = g[j3][i3] = 1;
							
                                     for(int i=0;i<n;i++) {a[i]=g[i1][i];b[i]=i;}
      for(int i = 0 ; i < n - 1; i++) { 
       // ñðàâíèâàåì äâà ñîñåäíèõ ýëåìåíòà.
       for(int j = i+1 ; j < n; j++) {  
           if(a[i] > a[j]) {           
              // åñëè îíè èäóò â íåïðàâèëüíîì ïîðÿäêå, òî  
              //  ìåíÿåì èõ ìåñòàìè. 
              int tmp = a[i];
              a[i] = a[j] ;
              a[j] = tmp; 
              swap(b[i],b[j]);
           }
        }
        }
    
    //for(int i=0;i<n;i++)cout<<a[i];cout<<endl;
    //for(int i=0;i<n;i++)cout<<b[i];cout<<endl;
    
							solution(); 
							g[i1][j1] = g[j1][i1] = temp1;
							g[i2][j2] = g[j2][i2] = temp2;
							g[i3][j3] = g[j3][i3] = temp3;
						}
					}
				}
				
			}
		}
	}
	
	//Ð²Ñ‹Ð²Ð¾Ð´ Ð¾Ñ‚Ð²ÐµÑ‚Ð°
	if(answer.empty()) cout << "NO";
	else cout << "YES: ";
	for (set<int>::iterator it = answer.begin(); it != answer.end(); it++)
		cout << *it+1 << " ";
	system("pause");
}
